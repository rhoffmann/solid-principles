// Generated by CoffeeScript 1.6.3
(function() {
  describe("Book rental", function() {
    describe("Order", function() {
      var book, user;
      user = new User("Richard");
      book = new Book("A Clash of Kings");
      it("belongs to a user", function() {
        return expect(new Order(user).user).toBe(user);
      });
      it("can have books", function() {
        var order;
        order = new Order();
        order.addBook(book);
        return expect(order.items[0].book).toBe(book);
      });
      it("can be terminated", function() {
        var order;
        order = new FlexibleOrder(user);
        order.addBook(book);
        order.terminate();
        return expect(order.status).toBe(Order.STATUS.complete);
      });
      return describe("with two books with different day limits", function() {
        var second_book;
        second_book = new Book("A Feast For Crows", 3);
        return it("sets the appropriate day limit", function() {
          var order;
          order = new Order();
          order.addBook(book);
          order.addBook(second_book);
          return expect(order._minDayLimit()).toBe(3);
        });
      });
    });
    return describe("FlexibleOrder", function() {
      return it("allows for some books to be returned prior to the end date", function() {
        var difference_in_days, first_book, order, second_book, user;
        user = new User("Richard");
        order = new FlexibleOrder(user);
        first_book = new Book("A Clash of Kings", 1);
        second_book = new Book("A Feast For Crows", 2);
        order.addBook(first_book);
        order.addBook(second_book);
        order.process();
        order.terminateBook(second_book);
        difference_in_days = order.dueDate.getDate() - new Date().getDate();
        console.log(difference_in_days);
        return expect(difference_in_days).toBe(1);
      });
    });
  });

}).call(this);
